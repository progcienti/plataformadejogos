algoritmo "PlataformaDeJogos"
var
   opcao : inteiro
   sair : logico

   // Subrotina: JOGO DA FORCA
procedimento jogoDaForca()
var
   palavra:vetor[0..2] de caractere
   elemento:vetor[1..20] de caractere
   posicao:vetor[1..3] de inteiro
   restante:vetor[1..3] de caractere
   qtdrestante:vetor[1..2] de inteiro
   acao:vetor[1..2] de caractere
   info:caracter
   tentativas,chances:inteiro
   escolhida,letra:caractere
   aleat,qtdcaracteres,i,pontos,pontosperdidos:inteiro
inicio
   palavra[0]<-"oftalmologia"
   palavra[1]<-"elemento"
   palavra[2]<-"batata"
   palavra[3]<- "quimica"
   aleat<- RandI(3)
   escolhida<-palavra[aleat]
   qtdcaracteres<-compr (escolhida)
   chances<-15
   pontos <- 0
   tentativas <- 0
   para i de 1 ate qtdcaracteres faca
      elemento[i]<-"_ "
   fimpara
   enquanto (pontos<qtdcaracteres) e (tentativas<chances) faca
      limpatela
      escreval("":35,"A FORCA")
      escreval("")
      escreva("Palavra: ")
      para i de 1 ate qtdcaracteres faca
         escreva("":1,Maiusc (elemento[i]) )
      fimpara
      escreval("")
      escreva("Tente uma letra: ")
      tentativas<-tentativas+1
      leia(letra)
      letra<-Minusc (letra)
      acao[1]<-"on"
      acao[2]<-"on"
      para i de 1 ate qtdcaracteres faca
         se (letra = (Copia (escolhida ; i, 1))) e (acao[1]="on") entao
            acao[1]<-"off"
            posicao[1]<-(Pos (letra, escolhida))
            se (elemento[posicao[1]]="_ ") entao
               elemento[posicao[1]]<-letra
               pontos<-pontos+1
            fimse
            restante[1]<-(Copia (escolhida ; posicao[1]+1, qtdcaracteres-posicao[1]) )
            qtdrestante[1]<-compr (restante[1])
            para i de 1 ate qtdrestante[1] faca
               se (letra = (Copia (restante[1] ; i, 1) )) e (acao[2]="on") entao
                  acao[2]<-"off"
                  posicao[2]<-(Pos (letra, restante[1]))
                  se (elemento[posicao[1]+posicao[2]]="_ ") entao
                     elemento[posicao[1]+posicao[2]]<-letra
                     pontos<-pontos+1
                  fimse
               fimse
            fimpara
            restante[2]<-(Copia (escolhida ; posicao[1]+posicao[2]+1, qtdcaracteres-posicao[2]) )
            qtdrestante[2]<-compr (restante[2])
            para i de 1 ate qtdrestante[2] faca
               se letra = (Copia (restante[2] ; i, 1) ) entao
                  posicao[3]<-(Pos (letra, restante[2]))
                  se (elemento[posicao[1]+posicao[2]+posicao[3]]="_ ") entao
                     elemento[posicao[1]+posicao[2]+posicao[3]]<-letra
                     pontos<-pontos+1
                  fimse
               fimse
            fimpara
         fimse
      fimpara
   fimenquanto
   limpatela
   escrevaL("":35,"A FORCA")
   escreval("")
   escreva("Palavra: ")
   para i de 1 ate qtdcaracteres faca
      escreva("":1,Maiusc (elemento[i]) )
   fimpara
   se tentativas<chances entao
      escreval("")
      escreval("Parabéns! Você acertou!")
   senao
      escreval("")
      escreval("Você excedeu o número de tentativas! =(")
   fimse
   escreval("")
   escrevaL("FIM DO JOGO")
   escreval("")
   escreval("Pressione ENTER para voltar ao menu")
   leia()
fimprocedimento

// Subrotina: PEDRA PAPEL TESOURA
procedimento pedraPapelTesoura()
var
   optSelected : inteiro
   optMachine : inteiro
   continueJogo : logico
   answer : caractere
   optString_y : caractere
   optString_m : caractere
   valid : logico
inicio
   continueJogo <- verdadeiro
   enquanto continueJogo faca
      optSelected <- 0
      valid <- verdadeiro
      optMachine <- RandI(3)

      escreval("Escolha sua jogada [Pedra - 1] [Papel - 2] [Tesoura - 3]")
      leia(optSelected)

      escolha optSelected
      caso 1
         optString_y <- "Pedra"
      caso 2
         optString_y <- "Papel"
      caso 3
         optString_y <- "Tesoura"
      outrocaso
         optString_y <- "Jogada inválida"
         valid <- falso
      fimescolha

      se(valid) entao
         escolha optMachine
         caso 0
            optString_m <- "Pedra"
         caso 1
            optString_m <- "Papel"
         caso 2
            optString_m <- "Tesoura"
         fimescolha

         escreval()
         escreval("Sua opção - ", optString_y)
         escreval("Opção da máquina - ", optString_m)
         escreval()

         se (optMachine = 0) e (optSelected = 3) ou (optMachine = 1) e (optSelected = 1) ou (optMachine = 2) e (optSelected = 2) entao
            escreval("A máquina venceu!")
         senao
            se(optMachine = 0) e (optSelected = 1) ou (optMachine = 1) e (optSelected = 2) ou (optMachine = 2) e (optSelected = 3) entao
               escreval("Empate")
            senao
               escreval("Você venceu")
            fimse
         fimse
         escreval()
         escreval("Deseja finalizar o jogo? Digite [SIM] ou [NAO]")
         leia(answer)
         se(answer = "SIM") ou (answer = "sim") entao
            continueJogo <- falso
         senao
            limpatela
         fimse
      fimse
   fimenquanto
fimprocedimento

// Código principal com o menu
inicio
   sair <- falso
   enquanto nao sair faca
      limpatela
      escreval("=======================================")
      escreval("         PLATAFORMA DE JOGOS           ")
      escreval("=======================================")
      escreval("1 - Jogo da Forca")
      escreval("2 - Pedra, Papel e Tesoura")
      escreval("3 - Sair")
      escreval("=======================================")
      escreva("Escolha uma opção: ")
      leia(opcao)

      escolha opcao
      caso 1
         limpatela
         jogoDaForca()
      caso 2
         limpatela
         pedraPapelTesoura()
      caso 3
         escreval("Encerrando... Até logo!")
         sair <- verdadeiro
      outrocaso
         escreval("Opção inválida. Tente novamente.")
      fimescolha
   fimenquanto
fimalgoritmo


